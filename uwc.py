import telebot
bot = telebot.TeleBot("5867240937:AAEqBIfP4IUwERMHfKQ3QOW20xawiS1jFdM")

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤—ñ—Ç, —è –±–æ—Ç, —è–∫–∏–π –¥–æ–ø–æ–º–æ–≥–∞—î –ø—Ä–∏—Ç—É–ª–∫–∞–º —Ç–∞ –Ω–∞—à–∏–º –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞–º –∫–æ–º—É–Ω—ñ–∫—É–≤–∞—Ç–∏. –ü–µ—Ä–µ–¥ –ø–æ—á–∞—Ç–∫–æ–º –≤–Ω–µ—Å–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ —Ç–≤–∞—Ä–∏–Ω—É –¥–æ–¥–∞–π—Ç–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤–∞—à –ø—Ä–∏—Ç—É–ª–æ–∫ —Ç–∞ –π–æ–≥–æ –∞–¥—Ä–µ—Å—É, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –∫–Ω–æ–ø–∫—É.', reply_markup=create_keyboard())

def create_keyboard():
    keyboard = telebot.types.InlineKeyboardMarkup()
    add_info_button = telebot.types.InlineKeyboardButton(text='üê∂–ù–æ–≤–∞ —Ç–≤–∞—Ä–∏–Ω–∞', callback_data='add info')
    add_info_button1 = telebot.types.InlineKeyboardButton(text='üîÑ–û–Ω–æ–≤–∏—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç–≤–∞—Ä–∏–Ω—É', callback_data='add info1')
    site_button = telebot.types.InlineKeyboardButton(text='Our site', url='https://www.figma.com/proto/bRK9SZkxlQiJqyro67Feuh/Untitled?node-id=110%3A2729&scaling=scale-down&page-id=0%3A1&starting-point-node-id=110%3A2731')
    shelter_button = telebot.types.InlineKeyboardButton(text='üè†–ü—Ä–∏—Ç—É–ª–æ–∫ —Ç–∞ –∞–¥—Ä–µ—Å–∞',callback_data="shelter")
    keyboard.add(add_info_button, site_button,shelter_button,add_info_button1)
    return keyboard
def delete(message):
    bot.delete_message(message.chat.id, message.message_id)
@bot.callback_query_handler(func=lambda call: call.data == 'add info1')
def handle_add_zabrali(call):
    delete(call.message)
    bot.send_message(call.message.chat.id, '–°—Ç–∞—Ç—É—Å —Ç–≤–∞—Ä–∏–Ω–∏(–ó–∞–±—Ä–∞–ª–∏/....)')
    bot.register_next_step_handler(call.message, handle_add_imya1)
def handle_add_imya1(message):
    global zabrali
    zabrali = message.text
    bot.send_message(message.chat.id, '–Ø–∫ —ó—ó –∑–≤–∞—Ç–∏?')
    bot.register_next_step_handler(message, handle_add_vid1)
def handle_add_vid1(message):
    global imya1
    imya1 = message.text
    bot.send_message(message.chat.id, '–©–æ —Ü–µ –∑–∞ —Ç–≤–∞—Ä–∏–Ω–∞')
    bot.register_next_step_handler(message, handle_infa1)
def handle_infa1(message):
    global vid1
    vid1 = message.text
    bot.send_message(message.chat.id, '–°—Ç–∞—Ç—É—Å —Ç–≤–∞—Ä–∏–Ω–∏: {}\n–á—ó –∑–≤—É—Ç—å: {}\n–¶–µ: {}'.format(zabrali,imya1,vid1))
    bot.send_message(message.chat.id,"–Ø –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —Ü—ñ –¥–∞–Ω—ñ –Ω–∞—à–∏–º —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∞–º :D")
    start(message)
@bot.callback_query_handler(func=lambda call: call.data == 'shelter')
def handle_add_info(call):
    delete(call.message)
    bot.send_message(call.message.chat.id,"–©–æ–± –∑–º—ñ–Ω–∏—Ç–∏ —ñ–Ω—Ñ—É –ø—Ä–æ –ø—Ä–∏—Ç—É–ª–æ–∫ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ —â–µ —Ä–∞–∑ –Ω–∞–∂–∞—Ç–∏ –Ω–∞ –∫–Ω–æ–ø—É '–í–∫–∞–∂—ñ—Ç—å –≤–∞—à –ø—Ä–∏—Ç—É–ª–æ–∫ —Ç–∞ –∞–¥—Ä–µ—Å –ø—Ä–∏—Ç—É–ª–∫—É',—Ç–∞ –≤–∫–∞–∑–∞—Ç–∏ —ñ–Ω—à—ñ –¥–∞–Ω–Ω—ñ")
    bot.send_message(call.message.chat.id, '–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –≤–∞—à–æ–≥–æ –ø—Ä–∏—Ç—É–ª–∫—É')
    bot.register_next_step_handler(call.message, handle_add_area)
def handle_add_area(message):
    global location
    location = message.text
    bot.send_message(message.chat.id, '–í–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å –ø—Ä–∏—Ç—É–ª–∫—É')
    bot.register_next_step_handler(message, infa_pro_prutylok)
def infa_pro_prutylok(message):
    global area
    area = message.text
    bot.send_message(message.chat.id, '–ù–∞–∑–≤–∞ –≤–∞—à–æ–≥–æ –ø—Ä–∏—Ç—É–ª–∫—É {}, —ñ –π–æ–≥–æ –∞–¥—Ä–µ—Å–∞ {}'.format(location, area))
    start(message)
@bot.callback_query_handler(func=lambda call: call.data == 'add info')
def handle_add_imya(call):
    delete(call.message)
    bot.send_message(call.message.chat.id, '–Ø–∫ –∑–≤–∞—Ç–∏ –≤–∞—à—É —Ç–≤–∞—Ä–∏–Ω—É?')
    bot.register_next_step_handler(call.message, handel_add_vid)
def handel_add_vid(message):
    global imya
    imya = message.text
    bot.send_message(message.chat.id, '–©–æ —Ü–µ –∑–∞ —Ç–≤–∞—Ä–∏–Ω–∞?')
    bot.register_next_step_handler(message, handle_add_razmer)
def handle_add_razmer(message):
    global vid
    vid = message.text
    bot.send_message(message.chat.id, '–í–∫–∞–∂—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä?')
    bot.register_next_step_handler(message, handle_add_stat)
def handle_add_stat(message):
    global razmer
    razmer = message.text
    bot.send_message(message.chat.id, '–í–∫–∞–∂—ñ—Ç—å —Å—Ç–∞—Ç—å?')
    bot.register_next_step_handler(message, handle_add_vik)
def handle_add_vik(message):
    global stat
    stat = message.text
    bot.send_message(message.chat.id, '–í–∫–∞–∂—ñ—Ç—å –≤—ñ–∫ —Ç–≤–∞—Ä–∏–Ω–∏')
    bot.register_next_step_handler(message, handle_add_vaga)
def handle_add_vaga(message):
    global vik
    vik = message.text
    bot.send_message(message.chat.id, '–í–∫–∞–∂—ñ—Ç—å –≤–∞–≥—É —Ç–≤–∞—Ä–∏–Ω–∏')
    bot.register_next_step_handler(message, handle_add_poroda)
def handle_add_poroda(message):
    global vaga
    vaga = message.text
    bot.send_message(message.chat.id, '–í–∫–∞–∂—ñ—Ç—å –ø–æ—Ä–æ–¥—É —Ç–≤–∞—Ä–∏–Ω–∏')
    bot.register_next_step_handler(message, handle_add_problem)
def handle_add_problem(message):
    global poroda
    poroda = message.text
    bot.send_message(message.chat.id, '–ß–∏ —î –≤ –Ω–µ—ó –ø—Ä–æ–±–ª–µ–º–∏?')
    bot.register_next_step_handler(message, handle_infa)
def handle_infa(message):
    global problem
    problem = message.text
    bot.send_message(message.chat.id, '–ù–∞–∑–≤–∞ –ø—Ä–∏—Ç—É–ª–∫—É : {}\n–ê–¥—Ä–µ—Å –ø—Ä–∏—Ç—É–ª–∫—É : {}\n–¢–≤–∞—Ä–∏–Ω—É –∑–≤–∞—Ç–∏ : {}\n–¶–µ : {}\n–á—ó —Ä–æ–∑–º—ñ—Ä : {}\n–á—ó —Å—Ç–∞—Ç—å : {}\n–á—ó –≤—ñ–∫ : {}\n–á—ó –≤–∞–≥–∞: {}\n–á—ó –ø–æ—Ä–æ–¥–∞: {}\n–ß–∏ —î –≤ –Ω–µ—ó –ø—Ä–æ–±–ª–µ–º–∏?: {}\n–í—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ?'.format(location, area,imya,vid,razmer,stat,vik,vaga,poroda,problem),reply_markup=create_keyboard1())
def create_keyboard1():
    keyboard = telebot.types.InlineKeyboardMarkup()
    false_button = telebot.types.InlineKeyboardButton(text='‚ùå', callback_data='false button')
    true_button = telebot.types.InlineKeyboardButton(text='‚úÖ', callback_data='true button')
    keyboard.add(false_button, true_button)
    return keyboard
@bot.callback_query_handler(func=lambda call: call.data == 'true button')
def sendsend(call):
    delete(call.message)
    bot.send_message(call.message.chat.id,"–Ø –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —Ü—ñ –¥–∞–Ω—ñ –Ω–∞—à–∏–º —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∞–º :D")
    start(call.message)
#def sendsend(message):
    #bot.send_message(message.chat.id,"–Ø –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —Ü—ñ –¥–∞–Ω–Ω—ñ –Ω–∞—à–∏–º —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∏–º :D")
    #start(message)
@bot.callback_query_handler(func=lambda call: call.data == 'false button')
def otvet_false(call):
    delete(call.message)
    start(call.message)
bot.polling()